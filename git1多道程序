#include<stdio.h>
#include<stdlib.h>
#include<string.h>
	struct work{       //每个结构体就是的模拟一个作业 
		char name[3];  //      作业的名称 
		float sum1,sum2,sum3,sum4,sum5,sum6;    //    每个作业可以大致分为3个阶段，用6个点表示3个阶段的开始与结束 
		float Count1;   //      作业的第一个计算时间 
		float IO ;      //      作业的I/O时间 
		float Count2;   //      作业的第二个计算时间 
	};  
	
	float Sps(float a,float b){
		return a-b;
	}
	
	int Way1(){
		return 3;
	}
	
	int Way2(){
		return 4;
	}
	
int main()
{
	int n,j,s,m,c,y,d;  //n表示作业个数，j，s是用于循环，其余为临时变量用于计算 
	float a,b;          //临时变量用于计算 
	float remain=0;     
	int flag=0,way=0,flag2=0,flag3=0,flag4=0,x[n];      //表示符，用于引导不同的计算方法 
	int trip=0,trip2=0;     //计数器 
	float sps=0,sps2=0,total=0,total2=0,total3=0;       //用于计算 
	printf("请输入作业个数:");
	scanf("%d",&n);
	//struct work work[n],room[n];
	struct work *works;
	works = (struct work*)malloc(n * sizeof(work));
	printf("请输入作业工作方式,0表示抢占式,1表示非抢占式\n");
	printf("请输入工作方式:");
	scanf("%d",&flag);
	printf("\n");
 for(s=0;s<n;s++){
 	printf("请输入第%d个作业的名称\n",s+1);
 	printf("第%d个作业的名称为:",s+1);
 	scanf("%s",&works[s].name);
 	printf("请输入第%d个作业的第一阶段的计算时间，单位ms\n",s+1);
 	printf("第%d个作业的第一阶段计算时间为:",s+1);
 	scanf("%f",&works[s].Count1);
 	printf("请输入第%d个作业的I/O的计算时间，单位ms\n",s+1);
 	printf("第%d个作业的第一阶段计算时间为:",s+1);
 	scanf("%f",&works[s].IO);
 	printf("请输入第%d个作业的第二阶段的计算时间，单位ms\n",s+1);
 	printf("第%d个作业的第一阶段计算时间为:",s+1);
 	scanf("%f",&works[s].Count2);
 	printf("\n");
  }

  if(flag==0){
  	for(s=0;s<n;s++){
  		x[s]=-1;
	  }
  	for(s=0;s<n;s++){
  		if(s==0){
  		works[s].sum2=works[s].sum1+works[s].Count1;
  		printf("%s程序在%.2f到%.2f进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
  		works[s].sum3=works[s].sum2;
  		works[s].sum4=works[s].sum3+works[s].IO;
  		printf("%s程序在%.2f到%.2f进行I/O操作\n",works[s].name,works[s].sum3,works[s].sum4);
 		works[s].sum5=works[s].sum4;
 		works[s].sum6=works[s].sum5+works[s].Count2;
 		printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
 		printf("\n");
  		continue;
  	 }
        if(s>=1&&works[s].Count1>works[s-1].IO&&x[s]==-1){
  	 	   works[s].sum1=works[s-1].sum2;
  	 	   remain=works[s].Count1-works[s-1].IO;
  	 	   works[s].sum2=works[s].sum1+works[s-1].IO;
  	 	   printf("%s程序在%.2f到%.2f在进行第一次计算,",works[s].name,works[s].sum1,works[s].sum2);
  	 	   works[s].sum1=works[s-1].sum6;
  	 	   works[s].sum2=works[s].sum1+remain;
  	 	   printf("%s程序在%.2f到%.2f也在进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
  	 	   works[s].sum3=works[s].sum2;
  	 	   works[s].sum4=works[s].sum3+works[s].IO;
  	 	   printf("%s程序在%.2f到%.2f进行I/O操作\n",works[s].name,works[s].sum3,works[s].sum4);
  	 	   works[s].sum5=works[s].sum4;
  	 	   works[s].sum6=works[s].sum5+works[s].Count2;
  	 	   printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
  	 	   printf("\n");
  	 	   continue;
	   }
	   if(s>=1&&works[s].Count1<=works[s-1].IO&&x[s]==-1){
	    x[s]=Way1();
	    if(x[s]==3){
	   	works[s].sum1=works[s-1].sum2;
	   	works[s].sum2=works[s].sum1+works[s].Count1;
	   	printf("%s程序在%.2f到%.2f进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
	   	works[s].sum3=works[s-1].sum4;
	   	works[s].sum4=works[s].sum3+works[s].IO;
	   	printf("%s程序在%.2f到%.2f进行I/O操作\n",works[s].name,works[s].sum3,works[s].sum4);
		if(works[s].IO>=works[s-1].Count2){
		   	 	works[s].sum5=works[s].sum4;
		   	 	works[s].sum6=works[s].sum5+works[s].Count2;
		   	 	printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
				}
				else{
					works[s].sum5=works[s-1].sum6;
					works[s].sum6=works[s].sum5+works[s].Count2;
					printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
			}
			printf("\n");
	   }
	   	if(n==3&&s==1&&works[s+1].Count1<=Sps(works[0].IO,works[1].Count1)){
	  	works[s+1].sum1=works[s].sum2;
	   	works[s+1].sum2=works[s+1].sum1+works[s+1].Count1;
	   	printf("%s程序在%.2f到%.2f进行第一次计算\n",works[s+1].name,works[s+1].sum1,works[s+1].sum2);
	   	works[s+1].sum3=works[s].sum4;
	   	works[s+1].sum4=works[s+1].sum3+works[s+1].IO;
	   	printf("%s程序在%.2f到%.2f进行I/O操作\n",works[s+1].name,works[s+1].sum3,works[s+1].sum4);
		if(works[s+1].IO>=works[s].Count2){
		   	 	works[s+1].sum5=works[s+1].sum4;
		   	 	works[s+1].sum6=works[s+1].sum5+works[s+1].Count2;
		   	 	printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s+1].name,works[s+1].sum5,works[s+1].sum6);
				}
				else{
					works[s+1].sum5=works[s].sum6;
					works[s+1].sum6=works[s+1].sum5+works[s+1].Count2;
					printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s+1].name,works[s+1].sum5,works[s+1].sum6);
			}
			printf("\n");
			break;
	  }
	   	m=s;
	   	a=works[m-1].IO;
	   	b=works[m].Count1;
	   	while(Sps(a,b)>=works[m+1].Count1){
	   		a=Sps(a,b);
	   		b=works[m+1].Count1;
	   		m=m+1;
	   		if(m==n-1&&Sps(a,b)>=works[m].Count1){
	   		    	trip++;
	   		    	break;
			   }
			   trip++;
		   }
		   if(trip>0&&n!=3){
		   for(c=0;c<trip;c++){
		   	x[s+c]=Way1();
		    }
		   }
		   if(trip==0||(trip>0&&s+trip<n&&x[s+c]!=3)){
		   	x[s+1+trip]=Way2();
		   }
		   if(x[s]==3&&x[s+1]==4&&Sps(Sps(works[s-1].IO+works[s].IO,works[s].Count1+works[s-1].Count2),works[s+1].Count1)>0){
		   	x[s+2]=4;
		   }
		   if(x[s]==3&&x[s+1]==4&&Sps(Sps(works[s-1].IO+works[s].IO,works[s].Count1+works[s-1].Count2),works[s+1].Count1)<=0&&n!=3){
		   	x[s+2]=-1;
		   }
		   continue;
	  }
	  if(x[s]==3){
	  	works[s].sum1=works[s-1].sum2;
	   	works[s].sum2=works[s].sum1+works[s].Count1;
	   	printf("%s程序在%.2f到%.2f进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
	   	works[s].sum3=works[s-1].sum4;
	   	works[s].sum4=works[s].sum3+works[s].IO;
	   	printf("%s程序在%.2f到%.2f进行I/O操作\n",works[s].name,works[s].sum3,works[s].sum4);
		if(works[s].IO>=works[s-1].Count2){
		   	 	works[s].sum5=works[s].sum4;
		   	 	works[s].sum6=works[s].sum5+works[s].Count2;
		   	 	printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
				}
				else{
					works[s].sum5=works[s-1].sum6;
					works[s].sum6=works[s].sum5+works[s].Count2;
					printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
			}
			printf("\n");
			continue;
	  }
	  if(x[s]==4){
	  	works[s].sum1=works[s-1].sum2;
	  	works[s].sum2=works[s-2].sum5;
	  	printf("%s程序在%.2f到%.2f进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
	  	if(Sps(works[s-1].IO,works[s-2].Count2)<=0){
	  		works[s].sum1=works[s-1].sum6;
	  		works[s].sum2=works[s].sum1+Sps(works[s].Count1,Sps(works[s-2].IO,works[s-1].Count1));
	  		printf("%s程序在%.2f到%.2f也进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
	  		works[s].sum3=works[s].sum2;
	  		works[s].sum4=works[s].sum3+works[s].IO;
	  		printf("%s程序在%.2f到%.2f进行I/O操作\n",works[s].name,works[s].sum3,works[s].sum4);
	  		works[s].sum5=works[s].sum4;
	  		works[s].sum6=works[s].sum5+works[s].Count2;
	  		printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
	  		printf("\n");
		  }else if(Sps(works[s-1].sum4,works[s-2].sum6)>=Sps(works[s].Count1,Sps(works[s-2].sum5,works[s-1].sum2))){
		  	works[s].sum1=works[s-2].sum6;
		  	works[s].sum2=works[s].sum1+Sps(works[s].Count1,Sps(works[s-2].sum4,works[s-1].sum2));
		  	printf("%s程序在%.2f到%.2f也进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
		  	works[s].sum3=works[s-1].sum4;
		  	works[s].sum4=works[s].sum3+works[s].IO;
		  	printf("%s程序在%.2f到%.2f进行I/O操作\n",works[s].name,works[s].sum3,works[s].sum4);
		  	if(works[s].IO<=works[s-1].Count2){
		  		works[s].sum5=works[s-1].sum6;
		  		works[s].sum6=works[s].sum5+works[s].Count2;
		  		printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
	  		    printf("\n");
			  }else{
			  	works[s].sum5=works[s].sum4;
			  	works[s].sum6=works[s].sum5+works[s].Count2;
			  	printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
	  		    printf("\n");
			  }
		  }
		  else{
		  	works[s].sum1=works[s-2].sum6;
		  	works[s].sum2=works[s-1].sum4;
		  	printf("%s程序在%.2f到%.2f仍进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
		  	works[s].sum1=works[s-1].sum6;
		  	works[s].sum2=works[s].sum1+(Sps(works[s].Count1,Sps(works[s-2].IO,works[s-1].Count1))-Sps(works[s-1].IO,works[s-2].Count2));
		  	printf("%s程序在%.2f到%.2f进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
		  	works[s].sum3=works[s].sum2;
		  	works[s].sum4=works[s].sum3+works[s].IO;
		  	printf("%s程序在%.2f到%.2f进行I/O操作\n",works[s].name,works[s].sum3,works[s].sum4);
		  	works[s].sum5=works[s].sum4;
		  	works[s].sum6=works[s].sum5+works[s].Count2;
		  	printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
	  	    printf("\n");
		  }
		  continue;
	  }
	    printf("\n");
	 }
  }
  if(flag==1){
  	for(s=0;s<n;s++){
  		if(s==0){
  			if(works[s+1].Count1>=works[s].IO){
  				works[s].sum1=0;
  				works[s].sum2=works[s].sum1+works[s].Count1;
  				printf("%s程序在%.2f到%.2f进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
  				works[s].sum3=works[s].sum2;
  				works[s].sum4=works[s].sum3+works[s].IO;
  				printf("%s程序在%.2f到%.2f进行I/O操作\n",works[s].name,works[s].sum3,works[s].sum4);
  				works[s].sum5=works[s].sum2+works[s+1].Count1;
  				works[s].sum6=works[s].sum5+works[s].Count2;
  				printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
  				printf("\n");
  				works[s+1].sum1=works[s].sum2;
  				works[s+1].sum2=works[s+1].sum1+works[s+1].Count1;
  				works[s+1].sum3=works[s+1].sum2;
  				works[s+1].sum4=works[s+1].sum3+works[s+1].IO;
  				if(works[s+1].IO<=works[s].Count2){
  					works[s+1].sum5=works[s].sum6;
  					works[s+1].sum6=works[s+1].sum5+works[s+1].Count2;
  					if(n==3){
  						works[s+2].sum1=works[s+1].sum6;
  						works[s+2].sum2=works[s+2].sum1+works[s+2].Count1;
  						works[s+2].sum3=works[s+2].sum2;
  						works[s+2].sum4=works[s+2].sum3+works[s+2].IO;
  						works[s+2].sum5=works[s+2].sum4;
  						works[s+2].sum6=works[s+2].sum5+works[s+2].Count2;
					  }
				  }else{
				  	total3=works[s].Count2;
				  	d=s;
				  	while(total3<works[s+1].IO){
				  		total3=total3+works[d+2].Count1;
				  		d++;
				  		if(d+2==n&&total3<works[s+1].IO){
				  			flag4=1;
				  			break;
						  }
					  }
					  if(flag4!=1){
					  	for(int i=0;i<d;i++){
					  		if(d>1){
					  			if(i==0){
					  			works[s+2+i].sum1=works[s].sum6;
					  		}else{
					  			works[s+2+i].sum1=works[s+1+i].sum2;
							  }
					  			works[s+2+i].sum2=works[s+2+i].sum1+works[s+2+i].Count1;
					  			works[s+2+i].sum3=works[s+1+i].sum4;
					  			if(i==d-1&&works[s+2+i].sum2>=works[s+1+i].sum4){
					  				works[s+2+i].sum3=works[s+2+i].sum2;
								  }
					  			works[s+2+i].sum4=works[s+2+i].sum3+works[s+2+i].IO;
					  		    works[s+1].sum5=works[s+1+d].sum2;
						        works[s+1].sum6=works[s+1].sum5+works[s+1].Count2;
						        for(j=1;j<=d;j++){
						        	if(works[s+j].sum6>=works[s+1+j].sum4){
						        	works[s+1+j].sum5=works[s+j].sum6;
						        }else{
						        	works[s+1+j].sum5=works[s+1+j].sum4;
								}
						        	works[s+1+j].sum6=works[s+1+j].sum5+works[s+1+j].Count2;
								}
								break;
							  }
							  if(d==1){
							  	works[s+2+i].sum1=works[s].sum6;
							  	works[s+2+i].sum2=works[s+2+i].sum1+works[s+2+i].Count1;
							  	works[s+2+i].sum3=works[s+2+i].sum2;
							  	works[s+2+i].sum4=works[s+2+i].sum3+works[s+2+i].IO;
							  	works[s+1].sum5=works[s+1+d].sum2;
						        works[s+1].sum6=works[s+1].sum5+works[s+1].Count2;
							  	if(works[s+2+i].sum4>=works[s+1+i].sum6){
							  	works[s+2+i].sum5=works[s+2+i].sum4;
							  }else{
							  	works[s+2+i].sum5=works[s+1+i].sum6;
							  }
							  	works[s+2+i].sum6=works[s+2+i].sum5+works[s+2+i].Count2;
							  	if(s+3+i<=n){
							  		works[s+3+i].sum1=works[s+2+i].sum6;
							  		works[s+3+i].sum2=works[s+3+i].sum1+works[s+3+i].Count1;
							  		works[s+3+i].sum3=works[s+3+i].sum2;
							  		works[s+3+i].sum4=works[s+3+i].sum3+works[s+3+i].IO;
							  		works[s+3+i].sum5=works[s+3+i].sum4;
							  		works[s+3+i].sum6=works[s+3+i].sum5+works[s+3+i].Count2;
								  }
								  break;
							  }
						  }
					  }
					  if(flag4==1){
					  	works[s+1].sum5=works[s+1].sum4;
					  	works[s+1].sum6=works[s+1].sum5+works[s+1].Count2;
					  	for(int i=0;i<d;i++){
					  		if(i==0){
					  	works[s+2+i].sum1=works[s+i].sum6;
					  }else{
					  	works[s+2+i].sum1=works[s+1+i].sum2;
					  }
					  	works[s+2+i].sum2=works[s+2+i].sum1+works[s+2+i].Count1;
					  	works[s+2+i].sum3=works[s+1+i].sum4;
					  	works[s+2+i].sum4=works[s+2+i].sum3+works[s+2+i].IO;
					  	if(works[s+2+i].sum4<=works[s+1+i].sum6){
					  		works[s+2+i].sum5=works[s+1+i].sum6;
					  		works[s+2+i].sum6=works[s+2+i].sum5+works[s+2+i].Count2;
						  }else{
						  	works[s+2+i].sum5=works[s+2+i].sum4;
						  	works[s+2+i].sum6=works[s+2+i].sum5+works[s+2+i].Count2;
						  }
					  }
					}
				  }
			  }else{
			  	works[s].sum1=0;
  				works[s].sum2=works[s].sum1+works[s].Count1;
  				printf("%s程序在%.2f到%.2f进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
  				works[s].sum3=works[s].sum2;
  				works[s].sum4=works[s].sum3+works[s].IO;
  				printf("%s程序在%.2f到%.2f进行I/O操作\n",works[s].name,works[s].sum3,works[s].sum4);
                y=s+1;
                total=works[y].Count1;
                while(total<=works[s].IO){
                	total=total+works[y+1].Count1;
                	y++;
                	if(y==n-1&&total<works[s].IO){
                		works[s].sum5=works[s].sum4;
                		works[s].sum6=works[s].sum5+works[s].Count2;
                		printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
                		flag2=1;
                		break;
					}
				}
				if(flag2==0){
				sps=Sps(total,works[s].IO);
				works[s].sum5=works[s].sum4+sps;
				works[s].sum6=works[s].sum5+works[s].Count2;
				printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
  				printf("\n");
  			    }
				if(y==n-2){
					total2=works[s].IO;
					for(int i=1;i<y;i++){
						works[i].sum1=works[i-1].sum2;
						works[i].sum2=works[i].sum1+works[i].Count1;
						works[i].sum3=works[i-1].sum4;
						works[i].sum4=works[i].sum3+works[i].IO;
						total2=total2+works[i].IO;
					}
					if(total2>=total+works[0].Count1){
					works[y].sum1=works[y-1].sum2;
					works[y].sum2=works[y].sum1+works[y].Count1;
					works[y].sum3=works[y-1].sum4;
					works[y].sum4=works[y].sum3+works[y].IO;
					}else{
					works[y].sum1=works[y-1].sum2;
					works[y].sum2=works[y].sum1+works[y].Count1;
					works[y].sum3=works[y].sum2;
					works[y].sum4=works[y].sum3+works[y].IO;
					}
					for(int i=1;i<=y;i++){
						if(i==y){
								if(Sps(works[i].sum4,works[i-1].sum6)>=works[i+1].Count1){
									works[i].sum5=works[i].sum4;
									works[i].sum6=works[i].sum5+works[i].Count2;
									works[i+1].sum1=works[i-1].sum6;
									works[i+1].sum2=works[i+1].sum1+works[i+1].Count1;
									works[i+1].sum3=works[i].sum4;
									works[i+1].sum4=works[i+1].sum3+works[i+1].IO;
									if(works[i+1].IO<=works[i].Count2){
										works[i+1].sum5=works[i].sum6;
										works[i+1].sum6=works[i+1].sum5+works[i+1].Count2;
									}else{
										works[i+1].sum5=works[i+1].sum4;
										works[i+1].sum6=works[i+1].sum5+works[i+1].Count2;
									}
								}else{
									works[i+1].sum1=works[i-1].sum6;
									works[i+1].sum2=works[i+1].Count1+works[i+1].sum1;
									works[i+1].sum3=works[i+1].sum2;
									works[i+1].sum4=works[i+1].sum3+works[i+1].IO;
									works[i].sum5=works[i+1].sum2;
									works[i].sum6=works[i].sum5+works[i].Count2;
									if(works[i].Count2>=works[i+1].IO){
										works[i+1].sum5=works[i].sum6;
										works[i+1].sum6=works[i+1].sum5+works[i+1].Count2;
									}else{
										works[i+1].sum5=works[i+1].sum4;
										works[i+1].sum6=works[i+1].sum5+works[i+1].Count2;
									}
								}
								break;
						}
					  if(works[i].sum4>works[i-1].sum6){
					  	works[i].sum5=works[i].sum4;
					  	works[i].sum6=works[i].sum5+works[i].Count2;
					  	flag3=1;
					  }else{
					  	works[i].sum5=works[i-1].sum6;
					  	works[i].sum6=works[i].sum5+works[i].Count2;
					  }
				   }
				}
				if(y==n-1){
				total2=works[s].IO;
				for(int i=1;i<y;i++){                                                //        算出B C D 的前2个位置                      
					works[i].sum1=works[i-1].sum2;
					works[i].sum2=works[i].sum1+works[i].Count1;
					works[i].sum3=works[i-1].sum4;
					works[i].sum4=works[i].sum3+works[i].IO;
					total2=total2+works[i].IO;
				}
				if(total2>=total+works[0].Count1){
					works[y].sum1=works[y-1].sum2;
					works[y].sum2=works[y].sum1+works[y].Count1;
					works[y].sum3=works[y-1].sum4;
					works[y].sum4=works[y].sum3+works[y].IO;
				}else{
					works[y].sum1=works[y-1].sum2;
					works[y].sum2=works[y].sum1+works[y].Count1;
					works[y].sum3=works[y].sum2;
					works[y].sum4=works[y].sum3+works[y].IO;
				}
				for(int i=1;i<=y;i++){
					  if(works[i].sum4>works[i-1].sum6){
					  	works[i].sum5=works[i].sum4;
					  	works[i].sum6=works[i].sum5+works[i].Count2;
					  }else{
					  	works[i].sum5=works[i-1].sum6;
					  	works[i].sum6=works[i].sum5+works[i].Count2;
					  }
				  } 
			    }                                                               //
			  }
		  }
		   if(s>=1&&works[0].IO>works[1].Count1&&y==n-1){
		   		printf("%s程序在%.2f到%.2f进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
  				printf("%s程序在%.2f到%.2f进行I/O操作\n",works[s].name,works[s].sum3,works[s].sum4);
  				printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
  				printf("\n");
		   }
		   if(s>=1&&works[0].IO>works[1].Count1&&y==n-2){
		   		printf("%s程序在%.2f到%.2f进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
  				printf("%s程序在%.2f到%.2f进行I/O操作\n",works[s].name,works[s].sum3,works[s].sum4);
  				printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
  				printf("\n");
		   }
		   if(s>=1&&works[0].IO<=works[1].Count1){
		   		printf("%s程序在%.2f到%.2f进行第一次计算\n",works[s].name,works[s].sum1,works[s].sum2);
  				printf("%s程序在%.2f到%.2f进行I/O操作\n",works[s].name,works[s].sum3,works[s].sum4);
  				printf("%s程序在%.2f到%.2f进行第二次计算\n",works[s].name,works[s].sum5,works[s].sum6);
  				printf("\n");
		   }
	  }
  }
  return 0;
}
